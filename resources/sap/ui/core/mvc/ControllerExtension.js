/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/ui/base/Object","sap/ui/base/Metadata","sap/ui/core/mvc/ControllerMetadata","sap/ui/core/mvc/OverrideExecution","sap/base/util/uid","sap/base/future","sap/base/Log"],function(e,t,n,a,i,r,o){"use strict";var s=e.extend("sap.ui.core.mvc.ControllerExtension",{metadata:{stereotype:"controllerextension",methods:{byId:{public:true,final:true},getInterface:{public:false,final:true},getMetadata:{public:true,final:true},getView:{public:true,final:true},isA:{public:true,final:true}}},_setController:function(e){this.base=e},byId:function(e){var t=this.getMetadata().getNamespace();e=t+"."+e;return this.base?this.base.byId(e):undefined},getView:function(){return this.base.getView()},getInterface:function(){var e={};var t=this.getMetadata();var n=t._aAllPublicMethods;n.forEach(function(t){var n=this[t];if(typeof n==="function"){e[t]=function(){var e=n.apply(this,arguments);return e instanceof s?e.getInterface():e}.bind(this)}}.bind(this));this.getInterface=function(){return e};return e}},n);s.override=function(e){var a=t.createClass(this,"anonymousExtension~"+i(),{},n);a.getMetadata()._staticOverride=e;a.getMetadata()._override=this.getMetadata()._override;return a};s.use=function(e){throw new Error("ControllerExtension.use() is not a function that may be called at runtime. It is not contained in the public API."+"It is only used in TypeScript as a dummy function to convert a ControllerExtension class to an instance, but is supposed "+"to be removed by the class transformation. If you see this error, the call has not been removed as expected. Make sure to a) "+"only call this method on the base class 'ControllerExtension', not a derived class, and to b) only call it when defining class "+"member properties in an ES6-style class, and to c) use an up-to-date version of the 'transform-modules-ui5' Babel plugin or "+"the 'ui5-tooling-transpile' task/middleware for the UI5 build tooling. Only when used like this, the call is properly recognized and removed.")};s.overrideMethod=function(e,t,n,i,s){var l=t[e];var u=n[e];s=s||a.Instead;function c(n){(function(n,a,i,r){t[e]=function(){if(r){n.apply(i,arguments);return a.apply(t,arguments)}else{a.apply(t,arguments);return n.apply(i,arguments)}}})(u,l,i,n)}if(typeof u==="function"&&i){u=u.bind(i)}switch(s){case a.Before:if(l&&typeof l==="function"){c(true)}else if(typeof u==="function"){t[e]=u}else{r.errorThrows("Controller extension failed: lifecycleMethod '"+e+"', is not a function")}break;case a.After:if(l&&typeof l==="function"){c(false)}else if(typeof u==="function"){t[e]=u}else{r.errorThrows("Controller extension failed: lifecycleMethod '"+e+"', is not a function")}break;case a.Instead:default:if(e in t){o.debug("Overriding  member '"+e+"' of extension "+this.getMetadata().getName());if(!this.getMetadata().isMethodFinal(e)){t[e]=u}else{r.errorThrows("Error in ControllerExtension.override: Method '"+e+"' of extension '"+this.getMetadata().getName()+"' is flagged final and cannot be overridden!")}}else{t[e]=u}break}};return s});
//# sourceMappingURL=ControllerExtension.js.map