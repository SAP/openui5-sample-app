/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/f/cards/CardBadgeCustomData","sap/m/BadgeCustomData","sap/m/ObjectStatus","sap/ui/core/InvisibleText","sap/ui/core/Lib","sap/ui/core/library","sap/f/library"],function(t,e,i,a,s,n,d){"use strict";const g=d.CardBadgeVisibilityMode,r=n.IndicationColor;var o=function(){this.initCardBadgeEnablement=function(){this.addEventDelegate({onBeforeRendering:n},this)};function n(){const e=this._getCardBadgeCustomData();if(!e||this._aCardBadges){return}this._aCardBadges=[];e.forEach(e=>{const a=e instanceof t?e.getIcon():"";const s=new i({text:e.getValue(),icon:a,inverted:true,visible:e.getVisible(),state:e instanceof t?e.getState():r.Indication05,stateAnnouncementText:e instanceof t?e.getAnnouncementText():"",id:"badge"+e.getId()});if(a.length>0&&e.getValue()?.length>0){s.addStyleClass("sapFCardBadgeTextIcon")}this._aCardBadges.push(s)})}this._getCardBadgeCustomData=function(){const i=this.getCustomData().filter(function(i){return i instanceof t||i instanceof e});return i};this._getCardBadges=function(){this._aCardBadges.forEach(t=>{this.addAggregation("_cardBadges",t)});return this.getAggregation("_cardBadges")};this._getCardBadgeElement=function(t){const e=this._getCardBadges().find(e=>e.getId().indexOf(t)>0);return e};this._getInvisibleCardBadgeText=function(){if(this._oInvisibleCardBadgeText){return this._oInvisibleCardBadgeText}this._oInvisibleCardBadgeText=new a({id:this.getId()+"-ariaBadgeText",text:this._getCardBadgeAccessibilityText()});return this._oInvisibleCardBadgeText};this._getCardBadgeAccessibilityText=function(){const t=s.getResourceBundleFor("sap.f");let e="";this._getCardBadges().forEach(i=>{if(i.getVisible()&&i.getStateAnnouncementText()){e+=" "+i.getStateAnnouncementText()}else if(i.getVisible()){e+=" "+t.getText("CARD_BADGE",[i.getAccessibilityInfo().description])}});return e};this._hideBadges=function(){this._getCardBadgeCustomData().forEach(i=>{if(i instanceof e){i.setVisible(false)}else if(i instanceof t&&i.getVisibilityMode()==g.Disappear){i.setVisible(false)}})};this._updateBadgeProperty=function(t,e,i){const a=this._getCardBadgeElement(t);a?.setProperty(e,i);this._getInvisibleCardBadgeText()?.setText(this._getCardBadgeAccessibilityText());return this};this.updateBadgeVisibility=function(t){this._updateBadgeProperty(this.getBadgeCustomData().getId(),"visible",t)};this.updateBadgeValue=function(t){this._updateBadgeProperty(this.getBadgeCustomData().getId(),"text",t)};this.updateBadgeAnimation=function(){};this.getBadgeCustomData=function(){var t=this.getCustomData().filter(function(t){return t instanceof e});return t.length?t[0]:undefined}};return o});
//# sourceMappingURL=CardBadgeEnabler.js.map