//@ui5-bundle sap/ui/demo/todo/Component-preload.js
sap.ui.predefine("sap/ui/demo/todo/Component", ["sap/ui/core/UIComponent","sap/ui/core/ComponentSupport"],e=>{"use strict";return e.extend("sap.ui.demo.todo.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]}})});
sap.ui.predefine("sap/ui/demo/todo/controller/App.controller", ["sap/ui/Device","sap/ui/core/mvc/Controller","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/json/JSONModel","sap/base/strings/formatMessage"],(e,t,s,i,o,r)=>{"use strict";return t.extend("sap.ui.demo.todo.controller.App",{onInit(){this.aSearchFilters=[];this.aTabFilters=[];this.getView().setModel(new o({isMobile:e.browser.mobile}),"view")},getModel(){return this.getView().getModel()},addTodo(){const e=this.getModel();const t=this.getTodos().map(e=>Object.assign({},e));t.push({title:e.getProperty("/newTodo"),completed:false});e.setProperty("/todos",t);e.setProperty("/newTodo","")},onClearCompleted(){const e=this.getTodos().map(e=>Object.assign({},e));this.removeCompletedTodos(e);this.getModel().setProperty("/todos",e)},removeCompletedTodos(e){let t=e.length;while(t--){const s=e[t];if(s.completed){e.splice(t,1)}}},getTodos(){const e=this.getModel();return e&&e.getProperty("/todos")||[]},onUpdateItemsLeftCount(){const e=this.getTodos().filter(e=>e.completed!==true).length;this.getModel().setProperty("/itemsLeftCount",e)},onSearch(e){const t=this.getModel();this.aSearchFilters=[];this.sSearchQuery=e.getSource().getValue();if(this.sSearchQuery&&this.sSearchQuery.length>0){t.setProperty("/itemsRemovable",false);const e=new s("title",i.Contains,this.sSearchQuery);this.aSearchFilters.push(e)}else{t.setProperty("/itemsRemovable",true)}this._applyListFilters()},onFilter(e){this.aTabFilters=[];this.sFilterKey=e.getParameter("item").getKey();switch(this.sFilterKey){case"active":this.aTabFilters.push(new s("completed",i.EQ,false));break;case"completed":this.aTabFilters.push(new s("completed",i.EQ,true));break;case"all":default:}this._applyListFilters()},_applyListFilters(){const e=this.byId("todoList");const t=e.getBinding("items");t.filter(this.aSearchFilters.concat(this.aTabFilters),"todos");const s=this.getI18NKey(this.sFilterKey,this.sSearchQuery);this.byId("filterToolbar").setVisible(!!s);if(s){this.byId("filterLabel").bindProperty("text",{path:s,model:"i18n",formatter:e=>r(e,[this.sSearchQuery])})}},getI18NKey(e,t){if(!e||e==="all"){return t?"ITEMS_CONTAINING":undefined}else if(e==="active"){return"ACTIVE_ITEMS"+(t?"_CONTAINING":"")}else{return"COMPLETED_ITEMS"+(t?"_CONTAINING":"")}}})});
sap.ui.predefine("sap/ui/demo/todo/util/Helper", ["require"],e=>{"use strict";return{resolvePath(r){return e.toUrl("../")+r}}});
sap.ui.require.preload({
	"sap/ui/demo/todo/i18n/i18n.properties":'TITLE=todos\nINPUT_PLACEHOLDER=What needs to be done?\nCLEAR_COMPLETED=Clear completed\nACTIVE_ITEMS=Active items\nACTIVE_ITEMS_CONTAINING=Active items containing "{0}"\nCOMPLETED_ITEMS=Completed items\nCOMPLETED_ITEMS_CONTAINING=Completed items containing "{0}"\nITEMS_CONTAINING=Items containing "{0}"\nLABEL_ALL=All\nLABEL_ACTIVE=Active\nLABEL_COMPLETED=Completed',
	"sap/ui/demo/todo/i18n/i18n_de.properties":'TITLE=Todos\nINPUT_PLACEHOLDER=Was muss getan werden?\nCLEAR_COMPLETED=Erledigte Eintr\\u00e4ge entfernen\nACTIVE_ITEMS=Aktive Eintr\\u00e4ge\nACTIVE_ITEMS_CONTAINING=Aktive Eintr\\u00e4ge mit "{0}"\nCOMPLETED_ITEMS=Erledigte Eintr\\u00e4ge\nCOMPLETED_ITEMS_CONTAINING=Erledigte Eintr\\u00e4ge mit "{0}"\nITEMS_CONTAINING=Eintr\\u00e4ge mit "{0}"\nLABEL_ALL=Alle\nLABEL_ACTIVE=Aktiv\nLABEL_COMPLETED=Erledigt\n',
	"sap/ui/demo/todo/i18n/i18n_en.properties":'TITLE=todos\nINPUT_PLACEHOLDER=What needs to be done?\nCLEAR_COMPLETED=Clear completed\nACTIVE_ITEMS=Active items\nACTIVE_ITEMS_CONTAINING=Active items containing "{0}"\nCOMPLETED_ITEMS=Completed items\nCOMPLETED_ITEMS_CONTAINING=Completed items containing "{0}"\nITEMS_CONTAINING=Items containing "{0}"\nLABEL_ALL=All\nLABEL_ACTIVE=Active\nLABEL_COMPLETED=Completed',
	"sap/ui/demo/todo/manifest.json":'{"_version":"1.61.0","sap.app":{"id":"sap.ui.demo.todo","type":"application","i18n":{"bundleUrl":"i18n/i18n.properties","supportedLocales":["","de","en"]}},"sap.ui5":{"dependencies":{"minUI5Version":"1.121.0","libs":{"sap.ui.core":{},"sap.m":{},"sap.f":{}}},"rootView":{"viewName":"sap.ui.demo.todo.view.App","type":"XML","id":"app"},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"sap.ui.demo.todo.i18n.i18n","async":true,"supportedLocales":["","de","en"]}},"":{"type":"sap.ui.model.json.JSONModel","uri":"model/todoitems.json"}},"resources":{"css":[{"uri":"css/styles.css"}]}}}',
	"sap/ui/demo/todo/view/App.view.xml":'<mvc:View xmlns:mvc="sap.ui.core.mvc" xmlns:core="sap.ui.core" xmlns="sap.m" xmlns:f="sap.f" controllerName="sap.ui.demo.todo.controller.App" displayBlock="true"><App><Page><customHeader><f:ShellBar core:require="{ Helper: \'sap/ui/demo/todo/util/Helper\' }" title="{i18n>TITLE}" homeIcon="{:= Helper.resolvePath(\'./img/logo_ui5.png\') }" /></customHeader><content><f:DynamicPage><f:header><f:DynamicPageHeader pinnable="false"><Input class="todoInput" id="addTodoItemInput" value="{/newTodo}" placeholder="{i18n>INPUT_PLACEHOLDER}" change=".addTodo" /></f:DynamicPageHeader></f:header><f:content><List id="todoList"\n\t\t\t\t\t\t\t\titems="{ path: \'/todos\', events: { change: \'.onUpdateItemsLeftCount\' } }"\n\t\t\t\t\t\t\t\tmode="None"\n\t\t\t\t\t\t\t\tgrowing="true"\n\t\t\t\t\t\t\t\tgrowingScrollToLoad="true"\n\t\t\t\t\t\t\t\tshowNoData="false"\n\t\t\t\t\t\t\t\tshowSeparators="None"><headerToolbar><OverflowToolbar id="toolbar" class="sapUiSizeCompact" visible="{= !${view>/isMobile} }"><ToolbarSpacer /><SearchField id="searchTodoItemsInput" liveChange=".onSearch" width="20rem"/><SegmentedButton selectedKey="all" selectionChange=".onFilter" class="sapMSegmentedButtonNoAutoWidth"><items><SegmentedButtonItem text="{i18n>LABEL_ALL}" key="all"/><SegmentedButtonItem text="{i18n>LABEL_ACTIVE}" key="active"/><SegmentedButtonItem text="{i18n>LABEL_COMPLETED}" key="completed"/></items></SegmentedButton><Button id="clearCompleted" enabled="{/itemsRemovable}" icon="sap-icon://delete" text="{i18n>CLEAR_COMPLETED}" press=".onClearCompleted"/></OverflowToolbar></headerToolbar><infoToolbar><OverflowToolbar\n\t\t\t\t\t\t\t\t\t\tid="filterToolbar"\n\t\t\t\t\t\t\t\t\t\tvisible="false"\n\t\t\t\t\t\t\t\t\t\tactive="false"><Label id="filterLabel"/></OverflowToolbar></infoToolbar><CustomListItem><HBox><CheckBox selected="{completed}"  /><VBox justifyContent="Center"><Text text="{title}"/></VBox></HBox><customData><core:CustomData key="todo-item-completed" value="{= String(${completed})}" writeToDom="true" /></customData></CustomListItem></List></f:content></f:DynamicPage></content><footer><OverflowToolbar id="toolbar-footer" visible="{= !!${view>/isMobile} }"><SegmentedButton selectedKey="all" selectionChange=".onFilter" class="sapMSegmentedButtonNoAutoWidth"><items><SegmentedButtonItem text="All" key="all"/><SegmentedButtonItem text="Active" key="active"/><SegmentedButtonItem text="Completed" key="completed"/></items></SegmentedButton><ToolbarSpacer /><Button id="clearCompleted-footer" enabled="{/itemsRemovable}" icon="sap-icon://delete" text="{i18n>CLEAR_COMPLETED}" press=".onClearCompleted"/></OverflowToolbar></footer></Page></App></mvc:View>\n'
});
//# sourceMappingURL=Component-preload.js.map
